<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Jimall&#39;s Blog</title>
    <link>https://jimall.github.io/tags/git/</link>
    <description>Recent content in Git on Jimall&#39;s Blog</description>
    <image>
      <title>Jimall&#39;s Blog</title>
      <url>https://jimall.github.io/papermod-cover.png</url>
      <link>https://jimall.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 31 May 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://jimall.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>git submodule 的使用</title>
      <link>https://jimall.github.io/posts/technology/git-submodule/</link>
      <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
      <guid>https://jimall.github.io/posts/technology/git-submodule/</guid>
      <description>在 hugo blog 中，会用到 git submodule，本文介绍这个特性的使用</description>
    </item>
    <item>
      <title>.gitignore 的写法</title>
      <link>https://jimall.github.io/posts/technology/write-gitignore/</link>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
      <guid>https://jimall.github.io/posts/technology/write-gitignore/</guid>
      <description>在一个项目中，并不是所有的文件都需要使用 Git 进行版本管理，比如一些自动生成的文件，这时候可以在项目中添加 .gitignore 文件来忽略一些不需要进行版本管理的文件。
.gitignore 有一套语法，下面介绍一下：
.gitignore 文件语法 首先 .gitignore 文件每一行定义一条规则，从上到下进行解释的。
注释 使用 # 行注释
通配符匹配 .gitignore 可以使用通配符匹配，并且常常用到（* 用的比较多）
* 表示一个或多个字符
[] 表示范围
? 表示单个字符
忽略文件和否定忽略文件 每一行，写路径即可忽略掉相应的内容，在路径前使用 ! 即可取消忽略相应路径，比如：
# 忽略 .exe 文件 *.exe # 否定忽略 main.exe，由于文件是从上到下进行解释的，所以上下两条规则的意思是忽略除了 main.exe 的所有 .exe 文件 !main.exe # 忽略 build 文件夹 build/ 防止递归 直接制定文件名，实际上是递归的忽略，也就是说 *.exe 会忽略目录下的所有 .exe 文件。
使用 / 防止递归：
# 仅在当前目录下忽略 temp 文件， 但不包括子目录下的 subdir/temp /temp # 忽略 build/ 文件夹下的所有文件 build/ # 忽略 doc/notes.</description>
    </item>
  </channel>
</rss>
